Магические числа в коде
Константы должны задаваться через enum
Выводить \n в конце не нужно, так как это задача на посимвольную обработку

Отсутствует или недостаточная проверка допустимости считанного значения N
Неправильное использование функций динамического выделения памяти
Неправильная проверка результата scanf

Операция % неэффективна
Используйте sizeof(VALUE) а не sizeof(TYPE)

Неправильная проверка результата scanf
Неправильная или отсутствует проверка допустимости считанного значения
Неправильная работа с функциями динамического выделения памяти, нет проверок
Используйте sizeof(VALUE)

Что то тут не то

Достаточно одного цикла

Магические числа в коде: объявляйте константы, давайте им понятные имена и комментируйте назначение
Нет проверки sscanf
//
константы объявляются через enum

Неправильное использование функций работы с динамической памятью

Не проверяется успешность sscanf

Магические числа
Проверяйте, что из файла считали не меньше, чем запросили

Используйте стандартную константу для числа бит в байте
не проверяется scanf

S_ISREG и S_ISLNK взаимно исключают друг друга.
Перепишите цикл без использования break или continue

Тут не нужно использовать динамическую память, используйте локальный буфер
Нет проверки считанного значения
Уберите отладочный код
"Магические числа" в коде.

Уберите отладочный код
"Магические числа" в коде.

Константа PATH_MAX уже включает в себя \0-терминатор строки, не нужно записывать PATH_MAX + 1.
Константа 4, определяющая длину суффикса, не должна определяться сама по себе, а должна зависить от суффикса
Проверяйте, что в результате snprintf вся строка уместилась в буфер строки
Используйте sizeof во втором аргументе snprintf
Вынесите проверку строки на суффикс в отдельную функцию
Устраните все break и/или continue

уберите отладочный код
нет проверки успешности snprintf

"магическое" число 3 должно быть объявлено как константа
При появлении некорректного ввода (например, цифра 7 или буква T) программа должна завершаться с ошибкой

"Магические числа" в коде. Используйте и документируйте константы.
Зачем внутри каждого месяца искать четверги отдельно? При переходе от месяца к месяцу разница между четвергами все также 7
Упростите код, все эти проверки на количество дней в месяце лишние, можно проще

слишком сложно, задача решает проще

в отце следует использовать exit
магические числа

Вспомогательная функция не должна в случае ошибки завершать процесс
В main не нужен if, можно возвращать результат вычисления логического выражения.
Для возврата значения из функции не нужен if: можно возвращать результат вычисления логического выражения.
//
В случае ошибки вспомогательная функция не должна возвращать значение, обозначающее успех

"параллельные" процессы не дожидются завершения "последоватеьного" процесса

pid процесса - предсказуемый, поэтому имя скрипта легко угадывается посторонним пользователем

getpid дает легко предсказуемую последовательность используйте /dev/urandom

Дублирование кода

При создании файла не должен устанавливаться бит 'x' прав доступа

дублирование кода

Используйте printf("%d\n", prime);
Почему _exit?

дублирование кода